{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents the input for a request action.",
            "properties": {
                "ConfigurationName": {
                    "description": "Name of the matchmaker to use for this request. The name of the matchmaker that was used with the original game session is listed in the <a>GameSession</a> object, <code>MatchmakerData</code> property. This property contains a matchmaking configuration ARN value, which includes the matchmaker name. (In the ARN value \"arn:aws:gamelift:us-west-2:111122223333:matchmakingconfiguration/MM-4v4\", the matchmaking configuration name is \"MM-4v4\".) Use only the name for this parameter.",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9-\\.]+",
                    "type": "string"
                },
                "GameSessionArn": {
                    "description": "Amazon Resource Name (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html\">ARN</a>) that is assigned to a game session and uniquely identifies it. ",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9:/-]+",
                    "type": "string"
                },
                "Players": {
                    "description": "<p>Match information on all players that are currently assigned to the game session. This information is used by the matchmaker to find new players and add them to the existing game.</p> <ul> <li> <p>PlayerID, PlayerAttributes, Team -\\\\- This information is maintained in the <a>GameSession</a> object, <code>MatchmakerData</code> property, for all players who are currently assigned to the game session. The matchmaker data is in JSON syntax, formatted as a string. For more details, see <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/match-server.html#match-server-data\"> Match Data</a>. </p> </li> <li> <p>LatencyInMs -\\\\- If the matchmaker uses player latency, include a latency value, in milliseconds, for the region that the game session is currently in. Do not include latency values for any other region.</p> </li> </ul>",
                    "items": {
                        "description": "Represents a player in matchmaking. When starting a matchmaking request, a player has a player ID, attributes, and may have latency data. Team information is added after a match has been successfully completed.",
                        "properties": {
                            "LatencyInMs": {
                                "description": "<p>Set of values, expressed in milliseconds, indicating the amount of latency that a player experiences when connected to AWS regions. If this property is present, FlexMatch considers placing the match only in regions for which latency is reported. </p> <p>If a matchmaker has a rule that evaluates player latency, players must report latency in order to be matched. If no latency is reported in this scenario, FlexMatch assumes that no regions are available to the player and the ticket is not matchable. </p>",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PlayerAttributes": {
                                "description": "Collection of key:value pairs containing player information for use in matchmaking. Player attribute keys must match the <i>playerAttributes</i> used in a matchmaking rule set. Example: <code>\"PlayerAttributes\": {\"skill\": {\"N\": \"23\"}, \"gameMode\": {\"S\": \"deathmatch\"}}</code>.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Values for use in <a>Player</a> attribute key:value pairs. This object lets you specify an attribute value using any of the valid data types: string, number, string array or data map. Each <code>AttributeValue</code> object can use only one of the available properties.",
                                            "properties": {
                                                "N": {
                                                    "description": "For number values, expressed as double.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "S": {
                                                    "description": "For single string values. Maximum string length is 100 characters.",
                                                    "maxLength": 1024,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "SDM": {
                                                    "description": "For a map of up to 10 data type:value pairs. Maximum length for each string value is 100 characters. ",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "maxLength": 1024,
                                                                "minLength": 1,
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "SL": {
                                                    "description": "For a list of up to 10 strings. Maximum length for each string is 100 characters. Duplicate values are not recognized; all occurrences of the repeated value after the first of a repeated value are ignored.",
                                                    "items": {
                                                        "maxLength": 1024,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PlayerId": {
                                "description": "Unique identifier for a player",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Team": {
                                "description": "Name of the team that the player is assigned to in a match. Team names are defined in a matchmaking rule set.",
                                "maxLength": 1024,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "TicketId": {
                    "description": "Unique identifier for a matchmaking ticket. If no ticket ID is specified here, Amazon GameLift will generate one in the form of a UUID. Use this identifier to track the match backfill ticket status and retrieve match results.",
                    "maxLength": 128,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9-\\.]+",
                    "type": "string"
                }
            },
            "required": [
                "ConfigurationName",
                "GameSessionArn",
                "Players"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}