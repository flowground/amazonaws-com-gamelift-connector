{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents the input for a request action.",
            "properties": {
                "FleetId": {
                    "description": "Unique identifier for a fleet to update port settings for.",
                    "pattern": "^fleet-\\S+",
                    "type": "string"
                },
                "InboundPermissionAuthorizations": {
                    "description": "Collection of port settings to be added to the fleet record.",
                    "items": {
                        "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on Amazon GameLift. Each game session hosted on a fleet is assigned a unique combination of IP address and port number, which must fall into the fleet's allowed ranges. This combination is included in the <a>GameSession</a> object. ",
                        "properties": {
                            "FromPort": {
                                "description": "Starting value for a range of allowed port numbers.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "IpRange": {
                                "description": "Range of allowed IP addresses. This value must be expressed in CIDR notation. Example: \"<code>000.000.000.000/[subnet mask]</code>\" or optionally the shortened version \"<code>0.0.0.0/[subnet mask]</code>\".",
                                "pattern": "[^\\s]+",
                                "type": "string"
                            },
                            "Protocol": {
                                "description": "Network communication protocol used by the fleet.",
                                "enum": [
                                    "TCP",
                                    "UDP"
                                ],
                                "type": "string"
                            },
                            "ToPort": {
                                "description": "Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than <code>FromPort</code>.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "FromPort",
                            "ToPort",
                            "IpRange",
                            "Protocol"
                        ],
                        "type": "object"
                    },
                    "maxItems": 50,
                    "type": "array"
                },
                "InboundPermissionRevocations": {
                    "description": "Collection of port settings to be removed from the fleet record.",
                    "items": {
                        "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on Amazon GameLift. Each game session hosted on a fleet is assigned a unique combination of IP address and port number, which must fall into the fleet's allowed ranges. This combination is included in the <a>GameSession</a> object. ",
                        "properties": {
                            "FromPort": {
                                "description": "Starting value for a range of allowed port numbers.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "IpRange": {
                                "description": "Range of allowed IP addresses. This value must be expressed in CIDR notation. Example: \"<code>000.000.000.000/[subnet mask]</code>\" or optionally the shortened version \"<code>0.0.0.0/[subnet mask]</code>\".",
                                "pattern": "[^\\s]+",
                                "type": "string"
                            },
                            "Protocol": {
                                "description": "Network communication protocol used by the fleet.",
                                "enum": [
                                    "TCP",
                                    "UDP"
                                ],
                                "type": "string"
                            },
                            "ToPort": {
                                "description": "Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than <code>FromPort</code>.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "FromPort",
                            "ToPort",
                            "IpRange",
                            "Protocol"
                        ],
                        "type": "object"
                    },
                    "maxItems": 50,
                    "type": "array"
                }
            },
            "required": [
                "FleetId"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}