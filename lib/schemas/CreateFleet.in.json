{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents the input for a request action.",
            "properties": {
                "BuildId": {
                    "description": "Unique identifier for a build to be deployed on the new fleet. The build must have been successfully uploaded to Amazon GameLift and be in a <code>READY</code> status. This fleet setting cannot be changed once the fleet is created.",
                    "pattern": "^build-\\S+",
                    "type": "string"
                },
                "Description": {
                    "description": "Human-readable description of a fleet.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "EC2InboundPermissions": {
                    "description": "Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. If no inbound permissions are set, including both IP address range and port range, the server processes in the fleet cannot accept connections. You can specify one or more sets of permissions for a fleet.",
                    "items": {
                        "description": "A range of IP addresses and port settings that allow inbound traffic to connect to server processes on Amazon GameLift. Each game session hosted on a fleet is assigned a unique combination of IP address and port number, which must fall into the fleet's allowed ranges. This combination is included in the <a>GameSession</a> object. ",
                        "properties": {
                            "FromPort": {
                                "description": "Starting value for a range of allowed port numbers.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            },
                            "IpRange": {
                                "description": "Range of allowed IP addresses. This value must be expressed in CIDR notation. Example: \"<code>000.000.000.000/[subnet mask]</code>\" or optionally the shortened version \"<code>0.0.0.0/[subnet mask]</code>\".",
                                "pattern": "[^\\s]+",
                                "type": "string"
                            },
                            "Protocol": {
                                "description": "Network communication protocol used by the fleet.",
                                "enum": [
                                    "TCP",
                                    "UDP"
                                ],
                                "type": "string"
                            },
                            "ToPort": {
                                "description": "Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than <code>FromPort</code>.",
                                "maximum": 60000,
                                "minimum": 1,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "FromPort",
                            "ToPort",
                            "IpRange",
                            "Protocol"
                        ],
                        "type": "object"
                    },
                    "maxItems": 50,
                    "type": "array"
                },
                "EC2InstanceType": {
                    "description": "Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See <a href=\"http://aws.amazon.com/ec2/instance-types/\">Amazon EC2 Instance Types</a> for detailed descriptions.",
                    "enum": [
                        "t2.micro",
                        "t2.small",
                        "t2.medium",
                        "t2.large",
                        "c3.large",
                        "c3.xlarge",
                        "c3.2xlarge",
                        "c3.4xlarge",
                        "c3.8xlarge",
                        "c4.large",
                        "c4.xlarge",
                        "c4.2xlarge",
                        "c4.4xlarge",
                        "c4.8xlarge",
                        "r3.large",
                        "r3.xlarge",
                        "r3.2xlarge",
                        "r3.4xlarge",
                        "r3.8xlarge",
                        "r4.large",
                        "r4.xlarge",
                        "r4.2xlarge",
                        "r4.4xlarge",
                        "r4.8xlarge",
                        "r4.16xlarge",
                        "m3.medium",
                        "m3.large",
                        "m3.xlarge",
                        "m3.2xlarge",
                        "m4.large",
                        "m4.xlarge",
                        "m4.2xlarge",
                        "m4.4xlarge",
                        "m4.10xlarge"
                    ],
                    "type": "string"
                },
                "FleetType": {
                    "description": "Indicates whether to use on-demand instances or spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations, based on the instance type selected for this fleet. You can acquire on-demand instances at any time for a fixed price and keep them as long as you need them. Spot instances have lower prices, but spot pricing is variable, and while in use they can be interrupted (with a two-minute notification). Learn more about Amazon GameLift spot instances with at <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-credentials.html\"> Set up Access to External Services</a>. ",
                    "enum": [
                        "ON_DEMAND",
                        "SPOT"
                    ],
                    "type": "string"
                },
                "InstanceRoleArn": {
                    "description": "Unique identifier for an AWS IAM role that manages access to your AWS services. Any application that runs on an instance in this fleet can assume the role, including install scripts, server processs, daemons (background processes). Create a role or look up a role's ARN using the <a href=\"https://console.aws.amazon.com/iam/\">IAM dashboard</a> in the AWS Management Console. Learn more about using on-box credentials for your game servers at <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-resources.html\"> Access external resources from a game server</a>.",
                    "minLength": 1,
                    "type": "string"
                },
                "LogPaths": {
                    "description": "This parameter is no longer used. Instead, to specify where Amazon GameLift should store log files once a server process shuts down, use the Amazon GameLift server API <code>ProcessReady()</code> and specify one or more directory paths in <code>logParameters</code>. See more information in the <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api-ref.html#gamelift-sdk-server-api-ref-dataypes-process\">Server API Reference</a>. ",
                    "items": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": "array"
                },
                "MetricGroups": {
                    "description": "Name of an Amazon CloudWatch metric group to add this fleet to. A metric group aggregates the metrics for all fleets in the group. Specify an existing metric group name, or provide a new name to create a new metric group. A fleet can only be included in one metric group at a time. ",
                    "items": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 1,
                    "type": "array"
                },
                "Name": {
                    "description": "Descriptive label that is associated with a fleet. Fleet names do not need to be unique.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "NewGameSessionProtectionPolicy": {
                    "description": "<p>Game session protection policy to apply to all instances in this fleet. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy using <a>UpdateFleetAttributes</a>, but this change will only affect sessions created after the policy change. You can also set protection for individual instances using <a>UpdateGameSession</a>.</p> <ul> <li> <p> <b>NoProtection</b> -- The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> -- If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>",
                    "enum": [
                        "NoProtection",
                        "FullProtection"
                    ],
                    "type": "string"
                },
                "PeerVpcAwsAccountId": {
                    "description": "Unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your Account ID in the AWS Management Console under account settings. ",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "PeerVpcId": {
                    "description": "Unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same region where your fleet is deployed. Look up a VPC ID using the <a href=\"https://console.aws.amazon.com/vpc/\">VPC Dashboard</a> in the AWS Management Console. Learn more about VPC peering in <a href=\"https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html\">VPC Peering with Amazon GameLift Fleets</a>. ",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "ResourceCreationLimitPolicy": {
                    "description": "Policy that limits the number of game sessions an individual player can create over a span of time for this fleet.",
                    "properties": {
                        "NewGameSessionsPerCreator": {
                            "description": "Maximum number of game sessions that an individual can create during the policy period. ",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "PolicyPeriodInMinutes": {
                            "description": "Time span used in evaluating the resource creation limit policy. ",
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "RuntimeConfiguration": {
                    "description": "Instructions for launching server processes on each instance in the fleet. The run-time configuration for a fleet has a collection of server process configurations, one for each type of server process to run on an instance. A server process configuration specifies the location of the server executable, launch parameters, and the number of concurrent processes with that configuration to maintain on each instance. A CreateFleet request must include a run-time configuration with at least one server process configuration; otherwise the request fails with an invalid request exception. (This parameter replaces the parameters <code>ServerLaunchPath</code> and <code>ServerLaunchParameters</code>; requests that contain values for these parameters instead of a run-time configuration will continue to work.) ",
                    "properties": {
                        "GameSessionActivationTimeoutSeconds": {
                            "description": "Maximum amount of time (in seconds) that a game session can remain in status <code>ACTIVATING</code>. If the game session is not active before the timeout, activation is terminated and the game session status is changed to <code>TERMINATED</code>.",
                            "maximum": 600,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "MaxConcurrentGameSessionActivations": {
                            "description": "Maximum number of game sessions with status <code>ACTIVATING</code> to allow on an instance simultaneously. This setting limits the amount of instance resources that can be used for new game activations at any one time.",
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "ServerProcesses": {
                            "description": "Collection of server process configurations that describe which server processes to run on each instance in a fleet.",
                            "items": {
                                "description": "A set of instructions for launching server processes on each instance in a fleet. Each instruction set identifies the location of the server executable, optional launch parameters, and the number of server processes with this configuration to maintain concurrently on the instance. Server process configurations make up a fleet's <code> <a>RuntimeConfiguration</a> </code>.",
                                "properties": {
                                    "ConcurrentExecutions": {
                                        "description": "Number of server processes using this configuration to run concurrently on an instance.",
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "LaunchPath": {
                                        "description": "Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances <code>C:\\game</code>, and for Linux instances <code>/local/game</code>. A Windows game build with an executable file located at <code>MyGame\\latest\\server.exe</code> must have a launch path of \"<code>C:\\game\\MyGame\\latest\\server.exe</code>\". A Linux game build with an executable file located at <code>MyGame/latest/server.exe</code> must have a launch path of \"<code>/local/game/MyGame/latest/server.exe</code>\". ",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Parameters": {
                                        "description": "Optional list of parameters to pass to the server executable on launch.",
                                        "maxLength": 1024,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "LaunchPath",
                                    "ConcurrentExecutions"
                                ],
                                "type": "object"
                            },
                            "maxItems": 50,
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "ServerLaunchParameters": {
                    "description": "This parameter is no longer used. Instead, specify server launch parameters in the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a run-time configuration will continue to work.)",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                },
                "ServerLaunchPath": {
                    "description": "This parameter is no longer used. Instead, specify a server launch path using the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a run-time configuration will continue to work.)",
                    "maxLength": 1024,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "BuildId",
                "EC2InstanceType"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}